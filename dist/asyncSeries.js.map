{"version":3,"file":"asyncSeries.js","sources":["../index.js"],"sourcesContent":["/**\n * Asynchronously process a list of items, consecutively.\n *\n * @param Array array\n * @param Function(value, index, array) iteratee\n *\n * @return Promise resolve when done, reject on first error\n * @version 1.0.4\n */\nexport function forEach(array, iteratee) {\n    const { length } = array;\n    let index = -1;\n    return Promise.resolve()\n        .then(function _proc() {\n        ++index;\n        if (index < length) {\n            return Promise.resolve(iteratee.call(array, array[index], index, array))\n                .then(_proc);\n        }\n    });\n}\n/**\n * Asynchronously map a list of items, consecutively.\n *\n * @param Array array\n * @param Function(value, index, array, prevValue) iteratee\n * @param any firstValue The `prevValue` of first call to iteratee\n *\n * @return Promise(array) array mapped, reject on first error\n * @version 1.0.4\n */\nexport function map(array, iteratee, firstValue) {\n    const result = [];\n    const { length } = array;\n    let index = -1;\n    return Promise.resolve(firstValue)\n        .then(function _proc(prevValue) {\n        if (index >= 0) {\n            result[index] = prevValue;\n        }\n        ++index;\n        if (index < length) {\n            return Promise.resolve(iteratee.call(array, array[index], index, array, prevValue))\n                .then(_proc);\n        }\n        return result;\n    });\n}\n/**\n * Asynchronously reduce a list of items, consecutively.\n *\n * @param Array array\n * @param Function(accumulator, currentValue, index, array) reducer\n * @param any initialValue\n *\n * @return Promise(any) resolve to the last returned value when done, reject on first error\n * @version 1.0.4\n */\nexport function reduce(array, reducer, initialValue) {\n    const { length } = array;\n    let index = -1;\n    if (arguments.length < 3) {\n        initialValue = array[0];\n        ++index;\n    }\n    return Promise.resolve(initialValue)\n        .then(function _proc(accumulator) {\n        ++index;\n        if (index < length) {\n            return Promise.resolve(reducer.call(array, accumulator, array[index], index, array))\n                .then(_proc);\n        }\n        return accumulator;\n    });\n}\n"],"names":["forEach","array","iteratee","length","index","Promise","resolve","then","_proc","call","map","firstValue","result","prevValue","reduce","reducer","initialValue","arguments","accumulator"],"mappings":";;;;;;IAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,SAASA,OAAT,CAAiBC,KAAjB,EAAwBC,QAAxB,EAAkC;IACrC,EAAA,IAAQC,MAAR,GAAmBF,KAAnB,CAAQE,MAAR,CAAA;MACA,IAAIC,KAAK,GAAG,CAAC,CAAb,CAAA;MACA,OAAOC,OAAO,CAACC,OAAR,EAAA,CACFC,IADE,CACG,SAASC,KAAT,GAAiB;IACvB,IAAA,EAAEJ,KAAF,CAAA;;QACA,IAAIA,KAAK,GAAGD,MAAZ,EAAoB;UAChB,OAAOE,OAAO,CAACC,OAAR,CAAgBJ,QAAQ,CAACO,IAAT,CAAcR,KAAd,EAAqBA,KAAK,CAACG,KAAD,CAA1B,EAAmCA,KAAnC,EAA0CH,KAA1C,CAAhB,CACFM,CAAAA,IADE,CACGC,KADH,CAAP,CAAA;IAEH,KAAA;IACJ,GAPM,CAAP,CAAA;IAQH,CAAA;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACO,SAASE,GAAT,CAAaT,KAAb,EAAoBC,QAApB,EAA8BS,UAA9B,EAA0C;MAC7C,IAAMC,MAAM,GAAG,EAAf,CAAA;IACA,EAAA,IAAQT,MAAR,GAAmBF,KAAnB,CAAQE,MAAR,CAAA;MACA,IAAIC,KAAK,GAAG,CAAC,CAAb,CAAA;IACA,EAAA,OAAOC,OAAO,CAACC,OAAR,CAAgBK,UAAhB,CAAA,CACFJ,IADE,CACG,SAASC,KAAT,CAAeK,SAAf,EAA0B;QAChC,IAAIT,KAAK,IAAI,CAAb,EAAgB;IACZQ,MAAAA,MAAM,CAACR,KAAD,CAAN,GAAgBS,SAAhB,CAAA;IACH,KAAA;;IACD,IAAA,EAAET,KAAF,CAAA;;QACA,IAAIA,KAAK,GAAGD,MAAZ,EAAoB;UAChB,OAAOE,OAAO,CAACC,OAAR,CAAgBJ,QAAQ,CAACO,IAAT,CAAcR,KAAd,EAAqBA,KAAK,CAACG,KAAD,CAA1B,EAAmCA,KAAnC,EAA0CH,KAA1C,EAAiDY,SAAjD,CAAhB,CACFN,CAAAA,IADE,CACGC,KADH,CAAP,CAAA;IAEH,KAAA;;IACD,IAAA,OAAOI,MAAP,CAAA;IACH,GAXM,CAAP,CAAA;IAYH,CAAA;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACO,SAASE,MAAT,CAAgBb,KAAhB,EAAuBc,OAAvB,EAAgCC,YAAhC,EAA8C;IACjD,EAAA,IAAQb,MAAR,GAAmBF,KAAnB,CAAQE,MAAR,CAAA;MACA,IAAIC,KAAK,GAAG,CAAC,CAAb,CAAA;;IACA,EAAA,IAAIa,SAAS,CAACd,MAAV,GAAmB,CAAvB,EAA0B;IACtBa,IAAAA,YAAY,GAAGf,KAAK,CAAC,CAAD,CAApB,CAAA;IACA,IAAA,EAAEG,KAAF,CAAA;IACH,GAAA;;IACD,EAAA,OAAOC,OAAO,CAACC,OAAR,CAAgBU,YAAhB,CAAA,CACFT,IADE,CACG,SAASC,KAAT,CAAeU,WAAf,EAA4B;IAClC,IAAA,EAAEd,KAAF,CAAA;;QACA,IAAIA,KAAK,GAAGD,MAAZ,EAAoB;UAChB,OAAOE,OAAO,CAACC,OAAR,CAAgBS,OAAO,CAACN,IAAR,CAAaR,KAAb,EAAoBiB,WAApB,EAAiCjB,KAAK,CAACG,KAAD,CAAtC,EAA+CA,KAA/C,EAAsDH,KAAtD,CAAhB,CACFM,CAAAA,IADE,CACGC,KADH,CAAP,CAAA;IAEH,KAAA;;IACD,IAAA,OAAOU,WAAP,CAAA;IACH,GARM,CAAP,CAAA;IASH;;;;;;;;;;;;"}